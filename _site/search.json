[
  {
    "objectID": "selected_work.html",
    "href": "selected_work.html",
    "title": "Selected Work",
    "section": "",
    "text": "Examples of how I’ve applied R, Shiny, and software engineering across internal tools, public-sector systems, and open-source projects.\n\n\nSupporting Genomic Medicine in the NHS with R and Shiny\nType: Client Project (Team Build)\nTech Stack: R, Shiny, Docker, HTML Widgets, SQL, APIs\nAs part of a cross-functional team, I contributed to a modular Shiny application supporting the rollout of genomic testing within the NHS - building on the 100,000 Genomes Project. The app allowed operational staff, lab teams, and programme managers to track genomic samples and view key metrics without needing to work directly with the complex backend systems.\nWhat I worked on:\n\nUI and server logic across multiple Shiny sub-apps\n\nIntegration with APIs and SQL databases\n\nInteractive visualisations using plotly, visNetwork, sunburstR\n\nRefactoring and scaling reactive code for performance\n\nThe app was built to support a national rollout and continues to be used across NHS teams.\nWatch the talk →\n\n\n\nRefactoring a Legacy Shiny App for Maintainability\nType: Internal Tooling (Team Lead)\nTech Stack: R, Shiny, SQL, CI/CD\nWhile at Novartis, I led a small team responsible for maintaining an internal Shiny app used to manage R package installation requests. The codebase had become increasingly fragile and hard to maintain, with tightly coupled logic and growing technical debt.\nWhat I worked on:\n\nRefactored reactive logic to simplify control flow\n\nIntroduced automated tests and CI workflows\n\nImproved onboarding for new developers by making the codebase easier to understand\n\nThe changes made the application significantly more maintainable and safer to extend as the team evolved.\n\n\n\nOpen Source Contribution – Apache Arrow R Project\nType: Open Source Development & Authoring\nTech Stack: R, C++, dplyr, testing infrastructure\nI’ve been an active contributor to the Apache Arrow R project, where I’ve worked on extending dplyr support to the Arrow backend - enabling high-performance data manipulation in-memory and across file systems. I’ve also written extensively on the topic, including:\n\nScaling up with R and Arrow - a full-length book on working with large datasets in R using Arrow, to be published in print in 2025\n\nArrow R Cookbook - practical examples for using Arrow effectively in R\n\nThis work shapes how I think about reproducibility, performance, and long-term support in both open source and consulting contexts.\n\n\n\nScoping a Large-Scale SAS to R Migration\nType: Consulting – Code Audit & Planning\nTech Stack: SAS, R\nAs part of a consultancy engagement, I audited a large SAS codebase to help a client understand the feasibility and risk profile of migrating to R. The codebase was business-critical and had grown organically over many years.\nWhat I worked on:\n\nCategorised code by complexity (e.g. SQL-style vs. custom PROC logic)\n\nIdentified areas where statistical methods or parameter defaults might behave differently in R\n\nDelivered a scoped migration plan to help inform budget, risk, and staffing decisions\n\nThe audit helped the client avoid assumptions about direct conversion and provided a structured way to evaluate next steps."
  },
  {
    "objectID": "services.html",
    "href": "services.html",
    "title": "Services",
    "section": "",
    "text": "Practical R consulting to support production, build tools, and move away from legacy systems.\nI work with teams who use R in real-world contexts - research, healthcare, government, or startups - and need help making things more robust, maintainable, or usable. My work typically falls into three areas:\n\n1. Strengthening R Code for Production Use\nAnalytical code often works well for prototyping, but becomes harder to maintain as usage grows. I offer structured audits of R codebases to assess their suitability for production and provide clear, practical recommendations across structure, testing, packaging, and deployment.\nThe audit is a short, self-contained piece of work - usually 1–2 days - resulting in a written report with findings, lightweight metrics, and suggested next steps. It’s designed to surface risks and opportunities early, especially if you’re thinking about scaling, rewriting, or handing over the codebase. In some cases, it can also serve as a starting point for a broader refactor or support engagement.\nThis approach draws on past work refactoring and testing internal codebases, simplifying logic, and setting up CI - as well as experience building Shiny apps for NHS use and contributing to the Apache Arrow R package. The goal is always to improve robustness and maintainability without overengineering.\n\n\n2. Building Data Products that People Actually Use\nIf your organisation has useful data but no clear way to surface it, I can help design and build tools that make those insights accessible. That might mean a Shiny dashboard, an automated reporting pipeline, or something more tailored.\nI work with teams to understand the decisions they need to support, assess the data available, and develop tools that fit into existing workflows. For example, I helped deliver a large-scale Shiny app rolled out within the NHS, backed by a PostgreSQL database, built to be used reliably by non-technical teams across clinical settings.\n\n\n3. Migrating from Legacy Tools to Open Source R Workflows\nTools like Excel, SAS, or Stata are still widely used, but can be limiting - expensive, inflexible, and hard to integrate. I help teams explore and plan a move to R: starting with an audit of existing code and workflows, then identifying what can be translated directly, what needs rethinking, and what risks to watch for.\nIn one project, I analysed a large SAS codebase to help scope a potential migration. By categorising operation types and identifying complex components, I was able to provide a realistic migration plan - without overpromising or underestimating what was involved.\n\n\n\nHow I Work\nMost teams I work with already have something running - a script, a dashboard, a workflow that’s grown over time. My role is to figure out what’s working, what’s slowing you down, and what changes will help now without boxing you in later.\nThat could mean offering recommendations your team can implement, or delivering the changes myself - depending on what you need. The aim is always to apply the right level of engineering discipline for your context, without overcomplicating things."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I’m Nic Crane. I help teams get more value out of R by making their code easier to trust, maintain, and deploy.\nOver the past decade, I’ve worked across software engineering, data science, and open source - often in settings where R is used seriously, but the surrounding infrastructure hasn’t quite kept up. My work sits in the space between research and production: refactoring code, improving workflows, and helping teams ship things that work reliably.\nI’ve worked in pharma, public health, academia, and startups - and I’m comfortable moving between technical and domain-focused teams. Some highlights:\n\nI contributed to the Apache Arrow R project, where high standards for performance and cross-platform reliability are non-negotiable\nI’ve built dashboards and internal tools that were deployed across the NHS\nI’ve led workshops at major R conferences and co-authored an online course on R package development\n\nMost of the teams I work with don’t need huge platforms or full rewrites - they just need their existing work to be a bit more maintainable, a bit more reliable, and a lot easier to work with.\nIf that’s where you are, I can help.\n\n\nElsewhere\n\nGitHub\n\nTalks\n\nR package course on DataCamp"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Get in Touch",
    "section": "",
    "text": "If you’d like to talk about a project, need help with a code audit or tool development, or just want to sense-check an idea, feel free to reach out.\nEmail: [your@email.com] GitHub: github.com/thisisnic Optional: Add a [Calendly link] or short contact form if you want to make it easier to schedule time."
  }
]